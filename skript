function onOpen() { //po otevření se obarví řádek podle toho, jaký je den (bez ohledu na měsíc)
  var ss = SpreadsheetApp.getActiveSpreadsheet();
var sheet = ss.getSheetByName('Generátor'); 
var posledniradek = sheet.getLastRow()-2;
var rng = sheet.getRange(3,1,posledniradek); //jen první sloupec pro hledání
var tabulka = sheet.getRange(3,1,posledniradek,8); //pro celou tabulku
var data = rng.getValues();
  tabulka.setBackground('white');
  tabulka.setBorder(true,true,true,true,false,false, "white", SpreadsheetApp.BorderStyle.SOLID_MEDIUM);                    
var datum = new Date();
var dnes = datum.getDate(); //chceme jen datum dne
 
 for (var i=0; i < posledniradek; i++) {
   if (data[i][0] == dnes) {
  sheet.getRange(i+3,1,1,8).setBackground('red'); //+3 protože nahoře jsou dva řádky a i začíná od 0
 sheet.getRange(i+3,1,1,8).setBorder(true, true, true, true, false, false, "black", SpreadsheetApp.BorderStyle.SOLID_THICK); //, SpreadsheetApp.BorderStyle.SOLID_MEDIUM
 }
 } 
   var ui = SpreadsheetApp.getUi();
  
  ui.createMenu("Generovat")
    .addItem("Generovat kalendáře","ProvestCSV")
    .addToUi();
}

function DoCSV(jmeno,odkud,kam,kdo) { //jmeno = jaké jméno hledám; odkud je jaký sheet a dosesitu je do jakého sheetu
  var ss = SpreadsheetApp.getActiveSpreadsheet(); //aktivní Spreadsheet
  var prvni = ss.getSheetByName(odkud); //z jakého listu
  var druhy = ss.getSheetByName(kam); //do jakého listu, zatím se nepoužívá
  var d = new Date();
  var search = jmeno //co hledáme - zde pak bude "jmeno"
  var sloupec = 0; //kolikátý sloupec najdeme, podle toho vyplníme
  var radekdata = 1; //kolikátý řádek měníme
  var pocetradku = prvni.getLastRow(); //kolik je řádků 
  var pocetradku2 = druhy.getLastRow(); //kolik je řádků v sheetu kam se kopíruje (-2, protože jsou tam dva řádky nahoře)
  
  d = prvni.getRange(2,10).getValue(); //vezme si datum z políčka; ALE PAK POKUD JE PRVNÍ ŘÁDEK VYŠŠÍ JAK 25, TAK MÍNUS MĚSÍC a pak už jen přičítat den - to je u datum
  var prvniradek = prvni.getRange(3,1).getValue(); //udělá se podle prvního řádku
  d.setDate(prvniradek); //den se změní na to, co je v prvním řádku tabulky služeb  
  var datum = new Date();
  var prvnidatum = prvni.getRange(3,1).getValue(); //datum co je v prvním řádku
  datum = d; //jestli tohle neni trochu zbytečný
  
 datum.setDate(prvnidatum-1) //nastaví se na den co je v prvním řádku mínus jedna
  
  var smazat = druhy.getRange(2,1,pocetradku2,9); //smaže celý soubor od druhého do posledního řádku
  smazat.clear(); //tohle provede smazání
  
  var prvnirng = prvni.getRange(3, 2, pocetradku-2, 6); //vezmu obsah prvního sešitu
  var data = prvnirng.getValues(); //uložím data
  var druhyrng = druhy.getRange(2,1,35,9); //druhá metoda - beru 35 řádků z druhého sešitu
  
  var vysledek = new Array();
  vysledek = druhyrng.getValues(); //uložím data
  var pocetradku2 = 0; //počet použitých řádků 
  radky:    
  for (var y=0; y < pocetradku-2; y++) { //tolikrát, kolik je řádků (-2, protože jsou tam dva řádky nahoře)
    
    Logger.log(y + ': ' + datum);
    sloupce:
      for (var i=0; i < 6; i++) { //cyklus, který musí být menší než délka data+1
        
        if (data[y][i] == search) { //pokud se daná buňka rovná hledanému jméno
        sloupec = i;
          var den = d.getDay(d.setDate(prvni.getRange(y+3,1).getValue()));
          sluzba: //tady všude musí být výsledek
          switch (sloupec) { //tohle by šlo asi dělat úspornějš a hlavně přes array jako to má příklad s radkem, tj. data[0][y] apod.                       
              
              case 0:              
              if(den === 0) {/*Neděle*/
                vyplneni(kdo + 'Víkend neděle','12:00','20:00');
                            }
              else if(den === 6) {/*Sobota*/
                vyplneni(kdo + 'Víkend sobota','08:00','16:00');
              }
              else {/*zbytek*/
                vyplneni(kdo + 'Svátek','08:30','16:30');
              };
              break;
              
              case 1:
              vyplneni(kdo + 'Ranní','06:30','14:30');
              break;
              
              case 2:
              vyplneni(kdo + 'Ranní','06:30','14:30');             
              break;
              
              case 3:
              vyplneni(kdo + 'Od osmi','08:00','16:00');
              break;
              
              case 4:
              vyplneni(kdo + 'Od dvanácti','12:30','20:30');
              break;
              
              case 5:
              vyplneni(kdo + 'Odpolední','14:30','23:00');
              break;
              
              default: 
              break sloupce; //žádné přidání řádku
          }
          break sloupce;
          
        }
        
      }
  }
      
  druhyrng = druhy.getRange(2,1,vysledek.length,9); //aby šlo vložit, musí být range stejně velký jako vkládaná proměnná, takže vybereme stejnou velikost - vysledek.length by měl dát počet řádků
  druhyrng.setValues(vysledek);  
 
  /*moje podivná funkce na to, aby datum sedělo:*/
  /*prvni.getRange(y+3,1).getValue() + '/' + datum.getMonth() + '/' + datum.getYear()*/ 
  /* zákeřná funkce, která vypodmínkuej to, jaké má být datum, měsíc, rok, funguje to :) */
  function jseDatum(sesit,cyklus,promenna) {
  var bunka = sesit.getRange(cyklus+3,1).getValue(); //jaké je datum v řádku, která se zpracovává
  var mesic = promenna.getMonth(); //jaký je měsíc v přednastaveném datu
 
 if (bunka > 25 && cyklus < 6) { //když je to třeba třetí řádek a buňka je moc vysoká, musí se nastavit předchozí měsíc, protože je to minulý měsíc
   if (mesic === 0) { //ale předtím se zjistí, jestli předchozí měsíc není prosinec, tj. tento musí být leden, tj. 0
   return bunka + '/' + 12 + '/' + (promenna.getYear()-1);  //pak se tedy nastaví že předchozí měsíc byl prosinec = 12; a rok o jedno nižší
   } else { //když není leden, tak se předchozí měsíc nastaví o jedno nižší
   return bunka + '/' + mesic + '/' + promenna.getYear(); 
   }
 } else if (bunka < 15 && cyklus > 15) { //pravý opak první podmínky, když by tabulka končila dalším měsícem, tak aby to přičítalo
   if (mesic == 11) { //nejdřív se zjistí, jestli příští měsíc není už leden, pokud ano tak
 return bunka + '/' + 1 + '/' + (promenna.getYear()+1); //tak se nastaví jako leden a rok na příští
   }
   else { //jinak se příští měsíc ...
     return bunka + '/' + (mesic + 2) + '/' + (promenna.getYear()-1);  //pak se tedy nastaví že příští měsíc je současný +1, tj. mesic + 2
   }
 }   
   else { //když ale buňka není z minulého měsíce ani příštího a ani není leden ani prosinec, tak se nastaví současný měsíc (+1, protože tak to má javascript)
     return bunka + '/' + (mesic + 1) + '/' + promenna.getYear(); } 
 };
    
  /*funkce, co dělá vyplnění výsledků*/
  function vyplneni(typsluzby,odkdy,dokdy) {
    vysledek[pocetradku2][0] = typsluzby;
    vysledek[pocetradku2][1] = jseDatum(prvni,y,datum);
    vysledek[pocetradku2][2] = odkdy
    vysledek[pocetradku2][3] = jseDatum(prvni,y,datum);
    vysledek[pocetradku2][4] = dokdy;
    vysledek[pocetradku2][5] = '';
    vysledek[pocetradku2][6] = '';
    vysledek[pocetradku2][7] = 'FALSE';
    vysledek[pocetradku2][8] = 'TRUE';
    pocetradku2++; /*Když najde ve sloupci, tak přidá další řádek, díky tomu tam nevnikají mezery a tak*/
  }
  
};

function ProvestCSV() { //provede generaci do obou sheetů
DoCSV('Štěpán','Generátor','Petr','');
DoCSV('Kubicová','Generátor','Markéta','M - '); 
}

function dnes() { /*nastaví příští měsíc, někde jsem to opsal*/
  var now = new Date();
  if (now.getMonth() == 11) {
    var current = new Date(now.getFullYear() + 1, 0, 1);
} else {
    var current = new Date(now.getFullYear(), now.getMonth() + 1, 1);
};
  
  SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Generátor').getRange(2,10).setValue(current);
}

//import do kalendáře
function importovat(odkud,kalendar) { //z jakého sheetu se to bude brát a do jakého kalendáře se to nahraje
 var kal1 = CalendarApp.getCalendarById(kalendar); //vybereme kalendář podle ID
  if (kal1 === null) {return Browser.msgBox('Kalendář neexistuje! Upravte jeho ID.')}
  var ss = SpreadsheetApp.getActiveSpreadsheet(); //vybereme aktivní spreadsheet
 var sheet = ss.getSheetByName(odkud); //vybereme z jakého sheetu se budou data brát
 var velikost = sheet.getLastRow(); //změříme si objem dat
 var duplicitni = 0; //počet duplicitních událostí
 var smazane = 0; //počet událostí, které jsme smazali 
  var viceud = sheet.getRange(2,12).getValue(); //políčko, jestli v jeden den smí být více událostí
  var importovano = 0; //počet importovaných událostí
if (velikost <= 1) {return Browser.msgBox('Import selhal', 'List je prázdný, neexistují události, které by šly importovat. Proveďte generování z tabulky služeb tlačítkem Generovat v prvním listu.', Browser.Buttons.OK)}  
  radky:
  for (var i=2;i<=velikost;i++) { //dělá se tolikrát, kolik je řádek - od 2., protože máme hlavičku. Až do rovno velikosti
 var nazev = sheet.getRange(i,1).getValue(); //vezmeme název události
 var dat1 = sheet.getRange(i,2).getValue(); //vezmeme počáteční datum
 var dat2 = sheet.getRange(i,4).getValue(); //vezmeme koncové datum
  var cas1 = sheet.getRange(i,3).getValue(); //vezmeme počáteční čas
  var cas2 = sheet.getRange(i,5).getValue(); //vezmeme koncový čas 
  var datum1 = new Date(dat1); //z data v sheetu vytvoříme datum
  var datum2 = new Date(dat2);
  datum1.setHours(cas1.getHours()); //do data narveme hodiny ze sheetu
  datum1.setMinutes(cas1.getMinutes()); //a taky minuty
  datum2.setHours(cas2.getHours());
  datum2.setMinutes(cas2.getMinutes());
    
    if (viceud === 'ANO') { //pokud je zaškrtnuto, že nesmí být více událostí v jednom dni      
    var events = kal1.getEventsForDay(datum1); //tak se zjistí, jestli v tom dni nějaké jsou  
      if (events.length > 0) { //pokud jsou,     
        for(var y=0; y<events.length;y++){ //tak zjistíme, kolik 
          var ev = events[y]; //to je ID té případné duplicitní
          if (ev.getTitle() === nazev && events.length < 2) { //když se události shodují, ale neni jich tam víc (což se může stát) tak
            duplicitni++; //se označí jako duplicitní a nic neřeší (nesmí být continue radky, neb by to způsobilo nesmazání případných dalších)
          }
          else { //když se události neshodují, nebo jich je tam víc, ale přesto v tom dni nějaké jsou,         
            ev.deleteEvent(); //smaže se           
            smazane++; //přičte se mezi smazané
            if (y == (events.length-1)) {
            kal1.createEvent(nazev,datum1,datum2); //vytvoří se nová
              importovano++; //a zapíše se, že se importovala
            }
          }
        }
    
      }
      else { //a když žádné události v tom dni nejsou:
      kal1.createEvent(nazev,datum1,datum2); //vytvoří se nová
    importovano++; //a zapíše se, že se importovala
      }
    }
   /*--------------------------------------------*/
      else { //pokud zaškrtnuté ANO není (tj. je cokoliv jiného, nejenom NE)
    var events = kal1.getEvents(datum1, datum2, {search: nazev}); //najdou se události duplicitní, tedy pouze ty, které mají stejný začátek a čas    
    if (events.length === 1) { //pokud se najde jedna, je to ok a přeskočí se    
    duplicitni++;
    }
        else if (events.length === 0) { //pokud není žádná, neřeší se a vytváří se nová
          kal1.createEvent(nazev,datum1,datum2); //vytvoří se nová, pokud jich víc v tom dni není
              importovano++; //a zapíše se, že se importovala
              
             }
        else { //pokud jich je ale víc, musí se to pořešit jinak, protože se to nějak zdvojilo. Smažou se tak všechny duplicity a vytvoří se nová událost
       
          for(var y=0; y<events.length;y++){
          var ev = events[y];
          ev.deleteEvent(); //smažou se všechny
            smazane++;
            if (y == (events.length-1)) { //a až je cyklus u konce, vytvoří se nová
            kal1.createEvent(nazev,datum1,datum2); //vytvoří se nová, pokud jich víc v tom dni není
              importovano++; //a zapíše se, že se importovala
            }
          }
      
        }
         
      }
    

    } //konec "radky"
  
 if (duplicitni != velikost-1) {     
      return Browser.msgBox('Import úspěšný','Bylo importováno ' + importovano + ' událostí (smazáno: ' + smazane + ', duplicitní: ' + duplicitni + ').', Browser.Buttons.OK) }
  else {return Browser.msgBox('Import neúspěšný', 'Všechny události již v kalendáři jsou! Bylo tedy importováno: ' + importovano + ', duplicitni: ' + duplicitni + ', smazáno: ' + smazane + '.', Browser.Buttons.OK)}
 Logger.log(ev.getStartTime() + ' (' + datum1 + ') - ' + ev.getEndTime() + ' (' + datum2 + ')'); // zapise se do logu
}

 
